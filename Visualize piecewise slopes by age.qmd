---
title: "Visualize piecewise slopes by age"
format: html
editor: visual
---

# read in data

```{r}
library(lavaan)
library(tidyverse)
library(here)

BPIseverity.piecewise.moderated.fit <- read_rds(file = here('Model fits', 'BPIseverity.piecewise.moderated.fit'))

BPIinterference.piecewise.moderated.fit <- read_rds(file = here('Model fits', 'BPIinterference.piecewise.moderated.fit'))

IDS_and_ages <- read_csv(here('Generated Datasets', 'data_wide.rds')) %>%
  select(ID, age)
```

# combine data

```{r}

participant_predicted_values.wide <- 
  bind_cols(IDS_and_ages, 
            lavaan::predict(BPIseverity.piecewise.moderated.fit)) %>%
  rename(`Pain Severity Intercept` = myIntercept,
         `Pain Severity During Intervention` = slope1,
         `Pain Severity FU` = slope2) %>%
  bind_cols(., 
            lavaan::predict(BPIinterference.piecewise.moderated.fit)) %>%
  
  rename(`Pain Interference Intercept` = myIntercept,
         `Pain Interference During Intervention` = slope1,
         `Pain Interference FU` = slope2)

participant_predicted_values.long <-
participant_predicted_values.wide %>%
  pivot_longer(cols = `Pain Severity Intercept`:`Pain Interference FU`, names_to = "Estimate Type")


```

# plot 

This plot shows latent curve-predicted slopes for each individual (y axis) as a function of age (x axis). Regression line (dashed) captures the effect of age on slope. Greater improvement (more negative values of slope) occurs in older individuals during the intervention, but then greater relapse (more positive values of slope) occcurs in the FU period for older individuals.

```{r}

participant_predicted_values.long  %>%
  filter(!stringr::str_detect(`Estimate Type`, c("Intercept"))) %>%
  
  ggplot(aes(x = age, y = value)) +
  geom_point() +
  #scale_color_gradient(low = "light grey", high = "black") +
  stat_smooth(method = "lm", se = FALSE, color = 'black', linetype = "dashed") +
  xlab('Participant Age') +
  ylab('Change In Score Per Unit Time') +
  theme_bw() +
  facet_wrap(vars(`Estimate Type`))

```


## multivariate outlier detection with Cook's d

Per https://online.stat.psu.edu/stat462/node/173/, none of these values is problematic (problems occur at d > .5)

```{r}

fit_for_outliers <- lm(`Pain Severity During Intervention` ~ age, data = participant_predicted_values.wide)

plot(cooks.distance(fit_for_outliers))

```


```{r}

fit_for_outliers <- lm(`Pain Severity FU` ~ age, data = participant_predicted_values.wide)

plot(cooks.distance(fit_for_outliers))

```

```{r}

fit_for_outliers <- lm(`Pain Interference During Intervention` ~ age, data = participant_predicted_values.wide)

plot(cooks.distance(fit_for_outliers))

```


```{r}

fit_for_outliers <- lm(`Pain Interference FU` ~ age, data = participant_predicted_values.wide)

plot(cooks.distance(fit_for_outliers))

```