---
title: "Latent growth models"
format: html
editor: visual
---

# Read in data

```{r}
library(here)
library(lavaan)
library(tidyverse)
library(broom)
data.wide <- read_csv(here('Generated Datasets', 'data_wide.rds'))
```

# Generic model functions

```{r}

linear.model.generic <- '

myIntercept =~ 1*Var.1 +
              1*Var.2 +
              1*Var.3 +
              1*Var.4 +
              1*Var.5
              
linearSlope =~ 0*Var.1 +
              1*Var.2 +
              2*Var.3 +
              3*Var.4 +
              4*Var.5
'
```

```{r}
piecewise.model.generic <- '

myIntercept =~ 1*Var.1 +
              1*Var.2 +
              1*Var.3 +
              1*Var.4 +
              1*Var.5
              
slope1 =~ 0*Var.1 +
              1*Var.2 +
              2*Var.3 +
              2*Var.4 +
              2*Var.5
              
slope2 =~ 0*Var.1 +
              0*Var.2 +
              0*Var.3 +
              1*Var.4 +
              2*Var.5
              
'
```

```{r}

piecewise.model.moderated.generic <- '

myIntercept =~ 1*Var.1 +
              1*Var.2 +
              1*Var.3 +
              1*Var.4 +
              1*Var.5
              
slope1 =~ 0*Var.1 +
              1*Var.2 +
              2*Var.3 +
              2*Var.4 +
              2*Var.5
              
slope2 =~ 0*Var.1 +
              0*Var.2 +
              0*Var.3 +
              1*Var.4 +
              2*Var.5

slope1 ~~ slope1Sigma2*slope1
slope2 ~~ slope2Sigma2*slope2
              
myIntercept ~ mIntercept*ageMeanCentered
slope1 ~ mSlope1*ageMeanCentered
slope2 ~ mSlope2*ageMeanCentered

ageES_slope1 := mSlope1/sqrt(slope1Sigma2)
ageES_slope2 := mSlope2/sqrt(slope2Sigma2)

              
'

```

```{r}

fitLinearModel <- function(instrumentName){
  # input instrumentName as argument
  
  
  model <- str_replace_all(linear.model.generic, c("Var" = instrumentName))
  
  fit <- lavaan::growth(model = model,
                        data = data.wide,
                        missing = 'FIML')
  
  return(fit)
  
}

```

```{r}

fitPiecewiseModel <- function(instrumentName){
  # input instrumentName as argument
  
  model <- str_replace_all(
                    piecewise.model.generic, 
                    c("Var" = instrumentName))
  
  fit <- lavaan::growth(model = model,
                        data = data.wide,
                        missing = 'FIML')
  
  return(fit)
  
}

```

```{r}

fitPiecewiseModeratedModel <- function(instrumentName){
  # input instrumentName as argument
  
  
  model <- str_replace_all(piecewise.model.moderated.generic, c("Var" = instrumentName))
  
  fit <- lavaan::growth(model = model,
                        data = data.wide,
                        missing = 'FIML')
  
  return(fit)
  
}

```

# Fit models to data

## Pain severity

### Linear

```{r}

BPIseverity.linear.fit <- fitLinearModel('BPIseverity')

summary(BPIseverity.linear.fit, fit.measures = TRUE)

```

### Piecewise

```{r}

BPIseverity.piecewise.fit <- fitPiecewiseModel('BPIseverity')

summary(BPIseverity.piecewise.fit, fit.measures = TRUE)

```

### Model comparison

```{r}
anova(BPIseverity.linear.fit, BPIseverity.piecewise.fit)

```

### Moderated piecewise

```{r}

BPIseverity.piecewise.moderated.fit <- fitPiecewiseModeratedModel('BPIseverity')

summary(BPIseverity.piecewise.moderated.fit, fit.measures = TRUE)

write_rds(x = BPIseverity.piecewise.moderated.fit, 
          file = here('Model fits', 'BPIseverity.piecewise.moderated.fit'))

```

## Pain interference

### Linear

```{r}

BPIinterference.linear.fit <- fitLinearModel('BPIinterference')

summary(BPIinterference.linear.fit, fit.measures = TRUE)

```

### Piecewise

```{r}

BPIinterference.piecewise.fit <- fitPiecewiseModel('BPIinterference')

summary(BPIinterference.piecewise.fit, fit.measures = TRUE)

```

### Model comparison

```{r}
anova(BPIinterference.linear.fit, BPIinterference.piecewise.fit)

```

### Moderated piecewise

```{r}

BPIinterference.piecewise.moderated.fit <- fitPiecewiseModeratedModel('BPIinterference')

summary(BPIinterference.piecewise.moderated.fit, fit.measures = TRUE)

```

## CPAQ total

Piecewise is best fit though negative resid var at T5, no age moderation effects

### Linear

```{r}

CPAQ.linear.fit <- fitLinearModel('CPAQ')

summary(CPAQ.linear.fit, fit.measures = TRUE)

```

### Piecewise

```{r}

CPAQ.piecewise.fit <- fitPiecewiseModel('CPAQ')

summary(CPAQ.piecewise.fit, fit.measures = TRUE)

```

### Model comparison

```{r}
anova(CPAQ.linear.fit, CPAQ.piecewise.fit)

```

### Moderated piecewise

```{r}

CPAQ.piecewise.moderated.fit <- fitPiecewiseModeratedModel('CPAQ')

summary(CPAQ.piecewise.moderated.fit, fit.measures = TRUE)

```

## CPAQ Activities

Piecewise is best fit, no age moderation effects

### Linear

```{r}

CPAQ.linear.fit <- fitLinearModel('CPAQ_Activities')

summary(CPAQ.linear.fit, fit.measures = TRUE)

```

### Piecewise

```{r}

CPAQ.piecewise.fit <- fitPiecewiseModel('CPAQ_Activities')

summary(CPAQ.piecewise.fit, fit.measures = TRUE)

```

### Model comparison

```{r}
anova(CPAQ.linear.fit, CPAQ.piecewise.fit)

```

### Moderated piecewise

```{r}

CPAQ.piecewise.moderated.fit <- fitPiecewiseModeratedModel('CPAQ_Activities')

summary(CPAQ.piecewise.moderated.fit, fit.measures = TRUE)

```

## CPAQ Willingness

Piecewise is best fit though negative resid var at T5, no age moderation effects

### Linear

```{r}

CPAQ.linear.fit <- fitLinearModel('CPAQ_Willingness')

summary(CPAQ.linear.fit, fit.measures = TRUE)

```

### Piecewise

```{r}

CPAQ.piecewise.fit <- fitPiecewiseModel('CPAQ_Willingness')

summary(CPAQ.piecewise.fit, fit.measures = TRUE)

```

### Model comparison

```{r}
anova(CPAQ.linear.fit, CPAQ.piecewise.fit)

```

### Moderated piecewise

```{r}

CPAQ.piecewise.moderated.fit <- fitPiecewiseModeratedModel('CPAQ_Willingness')

summary(CPAQ.piecewise.moderated.fit, fit.measures = TRUE)

```


## PHQ9

Piecewise is best fit though negative resid var at T5, no age moderation effects

### Linear

```{r}

PHQ9.linear.fit <- fitLinearModel('PHQ9')

summary(PHQ9.linear.fit, fit.measures = TRUE)

```

### Piecewise

```{r}

PHQ9.piecewise.fit <- fitPiecewiseModel('PHQ9')

summary(PHQ9.piecewise.fit, fit.measures = TRUE)

```

### Model comparison

```{r}
anova(PHQ9.linear.fit, PHQ9.piecewise.fit)

```

### Moderated piecewise

```{r}

PHQ9.piecewise.moderated.fit <- fitPiecewiseModeratedModel('PHQ9')

summary(PHQ9.piecewise.moderated.fit, fit.measures = TRUE)

```
# PSQI

### Linear

```{r}

PSQI.linear.fit <- fitLinearModel('PSQI')

summary(PSQI.linear.fit, fit.measures = TRUE)

```

### Piecewise

```{r}

PSQI.piecewise.fit <- fitPiecewiseModel('PSQI')

summary(PSQI.piecewise.fit, fit.measures = TRUE)

```

### Model comparison

```{r}
anova(PSQI.linear.fit, PSQI.piecewise.fit)

```

### Moderated linear

```{r}

PSQI.linear.moderated.model <-'

myIntercept =~ 1*PSQI.1 +
              1*PSQI.2 +
              1*PSQI.3 +
              1*PSQI.4 +
              1*PSQI.5
              
slope1 =~ 0*PSQI.1 +
              1*PSQI.2 +
              2*PSQI.3 +
              3*PSQI.4 +
              4*PSQI.5
              
myIntercept ~ mIntercept*ageMeanCentered
slope1 ~ mSlope1*ageMeanCentered

              
'

PSQI.linear.moderated.fit <- lavaan::growth(model = PSQI.linear.moderated.model,
                        data = data.wide,
                        missing = 'FIML')

summary(PSQI.linear.moderated.fit, fit.measures = TRUE)

```

